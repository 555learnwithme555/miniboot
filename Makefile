# Author: Mihai Galos
# Creation Date: 2018-01-11
# Makefile Based on: https://gist.github.com/C222/5755c5a5a323de2e88b9
# License: GNU GPL v2 (see License.txt)


# Hey Emacs, this is a -*- makefile -*-
# C222
# June 2013

# Target file name
TARGET = miniboot
BOOTLOADER_START_ADDRESS = 0x6800

# List of C source files and object files
SRC =	$(TARGET).c \
	I2C-master-lib/i2c_master.c 

# Executable names
COMPILER = avr-g++
COPY = avr-objcopy
DFU = dfu-programmer
LDFLAGS = -Wl,--relax,--section-start=.text=$(BOOTLOADER_START_ADDRESS),--gc-sections,-Map=$(TARGET).map

# Which chip to program for
CHIP = atmega328p

# Misc arguments
FRQ = 8000000
DEFS = -Wp,-DF_CPU=$(FRQ)UL 
LIBS = -lm
OPT = s #Optimizations s = size, 0 = none, 3 = maximum
STD = gnu++11

version:
	@echo =====Version=====
	@$(COMPILER) --version
	@echo


bootloader.h:
	@echo =====Header Generation=====
	@echo "// Automatically generated by Makefile. DO NOT EDIT!" > $@
	@echo -en '\n' >> $@
	@echo "#pragma once" >> $@
	@echo -en '\n' >> $@
	@echo "#define BOOTLOADER_START_ADDRESS $(BOOTLOADER_START_ADDRESS)" >> $@
	@echo

build: version bootloader.h
	@echo =====Compiling=====
	$(COMPILER) -mmcu=$(CHIP) $(DEFS) -O$(OPT) $(LIBS) -std=$(STD) $(SRC) -o $(TARGET).elf $(LDFLAGS)
	@echo
	@echo =====Making .hex File=====
	$(COPY) -O ihex -R .eeprom -R .fuse -R .lock -R .signature $(TARGET).elf $(TARGET).hex
	@echo =====Done=====
	@echo

build-pedantic: version bootloader.h
	@echo =====Compiling=====
	$(COMPILER) -mmcu=$(CHIP) $(DEFS) -O$(OPT) $(LIBS) -std=$(STD) --pedantic  $(SRC) -o $(TARGET).elf $(LDFLAGS)
	@echo
	@echo =====Making .hex File=====
	$(COPY) -O ihex -R .eeprom -R .fuse -R .lock -R .signature $(TARGET).elf $(TARGET).hex
	@echo
	@echo =====Pedantic Build Done=====
	@echo
	@echo

info:
	@echo Size of binary hexfile. Use the "data" size to calculate the bootloader address:
	@avr-size $(TARGET).hex
	@echo
	@echo Memory map written to $(TARGET).map
clean:
	@echo =====Cleaning=====
	rm -f $(TARGET).elf $(TARGET).hex $(TARGET).map bootloader.h
	@echo

rebuild: clean build info
rebuild-pedantic: clean build-pedantic
default: build info
all: build info


